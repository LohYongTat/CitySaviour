<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_card</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets alignment
draw_set_halign(fa_center)
draw_set_valign(fa_center)

//draws self
draw_self();

var global.msg = text; //string to split
var splitBy = ";"; //string to split the first string by
var slot = 0;
var splits; //array to hold all splits
var str2 = ""; //var to hold the current split we're working on building

var i;
for (i = 1; i &lt; (string_length(global.msg)+1); i++) {
    var currStr = string_copy(global.msg, i, 1);
    if (currStr == splitBy) {
        splits[slot] = str2; //add this split to the array of all splits
        slot++;
        str2 = "";
    } else {
        str2 = str2 + currStr;
        splits[slot] = str2;
    }
}

//displays text
draw_set_colour("black")
//Title
draw_text_ext(x,y,splits[0],15,150);
//Harmful gases
draw_text(x,y+40,"Harmful Gases: " + splits[1])
//Oxygen level
draw_text(x,y+60,"Oxygen level: " + splits[2])
//Temperature
draw_text(x,y+80,"Temperature: " + splits[3])
//Manpower
draw_text(x,y+100,"Manpower: " + splits[4])
//Money
draw_text(x,y+250,"Money: " + str2)

if point_in_rectangle(mouse_x, mouse_y, x-100 , y - 50, x + 100 + 10, y + 250) and mouse_check_button_pressed(mb_left)
{
//remove question from prompt
indexprompt = ds_list_find_index(global.questionlist, global.prompt);
removeprompt = ds_list_delete(global.questionlist, indexprompt);

//remove answer from cards
indexcard = ds_list_find_index(global.cardlist, global.msg);
removecard = ds_list_delete(global.cardlist, indexcard);
//show_message(text)
//check if questionlist is empty
if ds_list_empty(global.questionlist)
{
    room_goto(room_end)
}
//navigate back to map
else
{
    mainmap = global.map
    room_goto(mainmap)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
